plugins {
	id 'fabric-loom' version '0.5.38'
	id 'maven-publish'
}

minecraft {
	accessWidener = file("src/main/resources/netherite_plus.accesswidener")
}

repositories {
	jcenter()    
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
	maven {
       	name = 'Masa'
       	url = 'https://masa.dy.fi/maven/'
    }
    maven {
        url = 'https://maven.modmuss50.me/'
    }
    maven {
		url = "https://jitpack.io"
	}
	maven {
		name = "NerdHubMC"
		url = "https://maven.abusedmaster.xyz/"
	}
	maven {
		url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
	}
	maven { url = "https://dl.bintray.com/kyrptonaught/Quickshulker/"}
	maven { url = "https://maven.misterpemodder.com/libs-release/"}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


dependencies {

    //to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    
	// Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

 	modApi("me.shedaniel.cloth:config-2:4.6.0"){
 		exclude(module: "fabric-api")
 	}

	//Libraries
	modImplementation 'net.devtech:arrp:0.2.6'
	include 'net.devtech:arrp:0.2.6'
	
	modImplementation 'com.github.OroArmor:oro-config:-SNAPSHOT'
	include 'com.github.OroArmor:oro-config:-SNAPSHOT'

	modCompile("io.github.prospector:modmenu:1.14.6+build.31")  {
   		exclude(module: "fabric-api")
	}

	modCompileOnly("net.kyrptonaught:quickshulker:1.1.1")  {
   		exclude(module: "fabric-api")
	}
	modCompileOnly("com.github.emilyploszaj:trinkets:2.6.3")  {
   		exclude(module: "fabric-api")
	}
	modCompileOnly("com.misterpemodder:shulkerboxtooltip:2.1.0+1.16.1")  {
   		exclude(module: "fabric-api")
	}
	
	modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:5.2.1")  {
   		exclude(module: "fabric-api")
	}
	
	modRuntime("me.shedaniel:RoughlyEnoughItems:5.2.1")  {
   		exclude(module: "fabric-api")
	}
	
	//Runtime tests
	//modRuntime "fi.dy.masa.malilib:malilib-fabric-1.16.1:0.10.0-dev.21+arne.1"
	//modRuntime "fi.dy.masa.tweakeroo:tweakeroo-fabric-1.16.1:0.10.0-dev.20200720.162627"
	//modRuntime "com.github.emilyploszaj:trinkets:2.6.3"
	//modRuntime "net.kyrptonaught:quickshulker:1.1.1"
	//modRuntime "com.misterpemodder:shulkerboxtooltip:2.1.0+1.16.1"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}