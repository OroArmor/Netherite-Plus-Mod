plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id 'maven-publish'
    id "com.matthewprenger.cursegradle"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
    forge()
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = "https://maven.shedaniel.me/"
    }
}

loom {
    mixinConfigs = ["netherite_plus.mixins.json", "multi-item-lib.mixins.json", "netherite-plus-forge.mixins.json"]
    useFabricMixin = true
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architectury.minecraft}")
    mappings("net.fabricmc:yarn:${rootProject.mappings}:v2")
    forge("net.minecraftforge:forge:${rootProject.architectury.minecraft}-${rootProject.forge_version}")

    modRuntime("me.shedaniel.cloth:cloth-config-forge:4.11.19")

    modCompile("me.shedaniel:architectury-forge:${rootProject.architectury_version}") {
        exclude(module: "fabric-loader")
    }

    modImplementation('com.oroarmor:oro-config-forge:3.0.0')
    modRuntime('com.oroarmor:oro-config-forge:3.0.0')

    implementation(project(path: ":common")) {
        exclude(module: "fabric-loader")
        transitive = false
    }
    developmentForge(project(path: ":common")) {
        exclude(module: "fabric-loader")
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionForge")) {
        exclude(module: "fabric-loader")
        transitive = false
    }

    shadow(rootProject.files("/forge-on-fabric-warning/build/libs/netherite-plus-mod-${rootProject.mod_version}-${rootProject.architectury.minecraft}.jar"))
}

processResources {
    inputs.property "version", rootProject.version

    from(sourceSets.main.resources.srcDirs) {
        include "META-INF/mods.toml"
        expand "version": rootProject.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "META-INF/mods.toml"
    }
}


shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    archiveClassifier = "forge"
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "netherite_plus.mixins.json",
        ])
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifact(remapJar.archivePath) {
                builtBy build
                classifier "forge"
            }

            groupId project.group
            artifactId project.archivesBaseName
            version project.version
        }
    }
}

curseforge {
    if (System.getenv("CURSE_API_KEY") != null) {
        apiKey = System.getenv("CURSE_API_KEY")
        project {
            id = "394120"
            releaseType = "release"
            addGameVersion "1.16-Snapshot"
            addGameVersion "1.16.4"
            addGameVersion "1.16.5"
            addGameVersion "Java 8"
            addGameVersion "Forge"
            changelogType = "html"
            changelog = rootProject.ext.releaseChangelog
            relations {
                requiredDependency "architectury-forge"
            }
            mainArtifact(remapJar.archivePath) {
                displayName = "Netherite Plus Mod - $rootProject.mod_version - Forge"
            }
            afterEvaluate {
                uploadTask.dependsOn("build")
            }
        }
    }
    options {
        forgeGradleIntegration = false
        javaVersionAutoDetect = false
    }
}

import com.modrinth.minotaur.TaskModrinthUpload

task modrinthForge (type: TaskModrinthUpload){
    token = System.getenv("MODRINTH_TOKEN") // Use an environment property!
    projectId = 'MlaM22M4'
    versionNumber = project.version + " - Forge"
    uploadFile = remapJar.archivePath // This is the java jar task
    changelog = rootProject.ext.releaseChangelog
    addGameVersion('1.16.4')
    addGameVersion('1.16.5')
    addLoader('forge')
    doLast {
        if (wasUploadSuccessful()) {
            rootProject.ext.forgeModrinthDownloadLink = "https://modrinth.com/mod/netherite-plus-mod/version/$uploadInfo.id"
            sendDiscordWebhook()
        }
    }
}