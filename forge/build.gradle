plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id 'maven-publish'
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

repositories {
    maven {
        url = "https://jitpack.io"
    }
}

loom {
    mixinConfigs = ["netherite_plus.mixins.json", "multi-item-lib.mixins.json"]
    useFabricMixin = true
}

//minecraft {
//    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
//}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architect.minecraft}")
    mappings("net.fabricmc:yarn:${rootProject.mappings}:v2")
    forge("net.minecraftforge:forge:${rootProject.architect.minecraft}-${rootProject.forge_version}")
    modCompile("me.shedaniel:architectury:${rootProject.architectury_version}:forge")

    compile('com.github.OroArmor:oro-config:-SNAPSHOT') {
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
    }
    shadow('com.github.OroArmor:oro-config:-SNAPSHOT') {
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
        exclude(module: "modmenu")
        exclude(module: "config-2")
    }

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformForgeFakeMod")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformForge")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", rootProject.version

    from(sourceSets.main.resources.srcDirs) {
        include "META-INF/mods.toml"
        expand "version": rootProject.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "META-INF/mods.toml"
    }
}


shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    archiveClassifier = "forge"
}

jar {
    manifest {
        attributes([
                "MixinConfigs": "netherite_plus.mixins.json",
        ])
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifact(remapJar.archivePath) {
                builtBy build
                classifier "forge"
            }

            groupId project.group
            artifactId project.archivesBaseName
            version project.version
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_KEY')
    publications = ["mavenForge"]
    publish = true
    pkg {
        repo = 'oroarmor'
        name = rootProject.archives_base_name
        userOrg = "oroarmor"
        licenses = ['CC0-1.0']
        vcsUrl = 'https://github.com/OroArmor/Netherite-Plus-Mod.git'
        version {
            name = rootProject.mod_version + "-" + rootProject.minecraft_version
        }
    }
}