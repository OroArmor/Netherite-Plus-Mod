repositories {
    mavenCentral()
}

minecraft {
    accessWidener = file("src/main/resources/netherite_plus.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.architectury.minecraft}"
    mappings("net.fabricmc:yarn:${rootProject.mappings}:v2")
    // We depend on fabric loader here to use the fabric @Environment annotations
    // Do NOT use other classes from fabric loader
    modCompile "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    modCompile("me.shedaniel:architectury:${rootProject.architectury_version}") {
        exclude(module: "fabric-api")
    }

    modCompile('com.oroarmor:oro-config-common:3.0.0') {
        exclude(module: "fabric-loader")
    }

    modCompile('com.oroarmor:multi-item-lib:1.3.0') {
        exclude(module: "fabric-api")
        exclude(module: "fabric-loader")
    }
}

architectury {
    common()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set("javadocs")
    javadocs.failOnError false
    from javadocs.destinationDir
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}.jar")) {
                builtBy build
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact javadocsJar

            groupId project.group
            artifactId project.archivesBaseName
            version project.version
        }
    }
}